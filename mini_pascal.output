Grammar

    0 $accept: Program $end

    1 @1: /* empty */

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    3 Identifier_list: ID
    4                | Identifier_list ',' ID

    5 Declarations: Declarations VAR Identifier_list ':' Type ';'
    6             | /* empty */

    7 Type: Standard_type
    8     | ARRAY '[' INUM ARRSEP INUM ']' OF Standard_type

    9 Standard_type: INTEGER
   10              | REAL

   11 Subprogram_declarations: Subprogram_declarations Subprogram_declaration ';'
   12                        | /* empty */

   13 @2: /* empty */

   14 Subprogram_declaration: Subprogram_head @2 Declarations Compound_statement

   15 @3: /* empty */

   16 Subprogram_head: FUNCTION ID @3 Arguments ':' Standard_type ';'

   17 @4: /* empty */

   18 Subprogram_head: PROCEDURE ID @4 Arguments ';'

   19 Arguments: '(' Parameter_list ')'
   20          | /* empty */

   21 Parameter_list: Identifier_list ':' Type
   22               | Parameter_list ';' Identifier_list ':' Type

   23 Compound_statement: BEG Optional_statements END

   24 Optional_statements: Statement_list
   25                    | /* empty */

   26 Statement_list: Statement
   27               | Statement_list ';' Statement

   28 Statement: Variable ASSIGNOP Expression
   29          | Procedure_statement
   30          | Compound_statement
   31          | IF Expression THEN Statement ELSE Statement
   32          | WHILE Expression DO Statement

   33 Variable: ID
   34         | ID '[' Expression_list ']'

   35 Procedure_statement: ID
   36                    | ID '(' Expression_list ')'

   37 Expression_list: Expression
   38                | Expression_list ',' Expression

   39 Expression: Simple_expression
   40           | Simple_expression RELOP Simple_expression

   41 Simple_expression: Term
   42                  | ADDOP Term
   43                  | Simple_expression ADDOP Term

   44 Term: Factor
   45     | Term MULOP Factor

   46 Factor: ID
   47       | ID '(' Expression_list ')'
   48       | INUM
   49       | RNUM
   50       | '(' Expression ')'
   51       | ID '[' Simple_expression ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 19 36 47 50
')' (41) 2 19 36 47 50
',' (44) 4 38
'.' (46) 2
':' (58) 5 16 21 22
';' (59) 2 5 11 16 18 22 27
'[' (91) 8 34 51
']' (93) 8 34 51
error (256)
PROGRAM (258) 2
FUNCTION (259) 16
PROCEDURE (260) 18
BEG (261) 23
END (262) 23
IF (263) 31
THEN (264) 31
ELSE (265) 31
WHILE (266) 32
DO (267) 32
VAR (268) 5
ARRAY (269) 8
OF (270) 8
ARRSEP (271) 8
INTEGER (272) 9
REAL (273) 10
ASSIGNOP (274) 28
RELOP (275) 40
ADDOP (276) 42 43
MULOP (277) 45
ID (278) 2 3 4 16 18 33 34 35 36 46 47 51
INUM (279) 8 48
RNUM (280) 49


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 2, on right: 0
@1 (36)
    on left: 1, on right: 2
Identifier_list (37)
    on left: 3 4, on right: 2 4 5 21 22
Declarations (38)
    on left: 5 6, on right: 2 5 14
Type (39)
    on left: 7 8, on right: 5 21 22
Standard_type (40)
    on left: 9 10, on right: 7 8 16
Subprogram_declarations (41)
    on left: 11 12, on right: 2 11
Subprogram_declaration (42)
    on left: 14, on right: 11
@2 (43)
    on left: 13, on right: 14
Subprogram_head (44)
    on left: 16 18, on right: 14
@3 (45)
    on left: 15, on right: 16
@4 (46)
    on left: 17, on right: 18
Arguments (47)
    on left: 19 20, on right: 16 18
Parameter_list (48)
    on left: 21 22, on right: 19 22
Compound_statement (49)
    on left: 23, on right: 2 14 30
Optional_statements (50)
    on left: 24 25, on right: 23
Statement_list (51)
    on left: 26 27, on right: 24 27
Statement (52)
    on left: 28 29 30 31 32, on right: 26 27 31 32
Variable (53)
    on left: 33 34, on right: 28
Procedure_statement (54)
    on left: 35 36, on right: 29
Expression_list (55)
    on left: 37 38, on right: 34 36 38 47
Expression (56)
    on left: 39 40, on right: 28 31 32 37 38 50
Simple_expression (57)
    on left: 41 42 43, on right: 39 40 43 51
Term (58)
    on left: 44 45, on right: 41 42 43 45
Factor (59)
    on left: 46 47 48 49 50 51, on right: 44 45


state 0

    0 $accept: . Program $end

    PROGRAM  shift, and go to state 1

    Program  go to state 2


state 1

    2 Program: PROGRAM . ID @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    2 Program: PROGRAM ID . @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    2 Program: PROGRAM ID @1 . '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    '('  shift, and go to state 6


state 6

    2 Program: PROGRAM ID @1 '(' . Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    ID  shift, and go to state 7

    Identifier_list  go to state 8


state 7

    3 Identifier_list: ID .

    $default  reduce using rule 3 (Identifier_list)


state 8

    2 Program: PROGRAM ID @1 '(' Identifier_list . ')' ';' Declarations Subprogram_declarations Compound_statement '.'
    4 Identifier_list: Identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


state 9

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' . ';' Declarations Subprogram_declarations Compound_statement '.'

    ';'  shift, and go to state 11


state 10

    4 Identifier_list: Identifier_list ',' . ID

    ID  shift, and go to state 12


state 11

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' . Declarations Subprogram_declarations Compound_statement '.'

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 13


state 12

    4 Identifier_list: Identifier_list ',' ID .

    $default  reduce using rule 4 (Identifier_list)


state 13

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' Declarations . Subprogram_declarations Compound_statement '.'
    5 Declarations: Declarations . VAR Identifier_list ':' Type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 12 (Subprogram_declarations)

    Subprogram_declarations  go to state 15


state 14

    5 Declarations: Declarations VAR . Identifier_list ':' Type ';'

    ID  shift, and go to state 7

    Identifier_list  go to state 16


state 15

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations . Compound_statement '.'
   11 Subprogram_declarations: Subprogram_declarations . Subprogram_declaration ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    BEG        shift, and go to state 19

    Subprogram_declaration  go to state 20
    Subprogram_head         go to state 21
    Compound_statement      go to state 22


state 16

    4 Identifier_list: Identifier_list . ',' ID
    5 Declarations: Declarations VAR Identifier_list . ':' Type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 23


state 17

   16 Subprogram_head: FUNCTION . ID @3 Arguments ':' Standard_type ';'

    ID  shift, and go to state 24


state 18

   18 Subprogram_head: PROCEDURE . ID @4 Arguments ';'

    ID  shift, and go to state 25


state 19

   23 Compound_statement: BEG . Optional_statements END

    BEG    shift, and go to state 19
    IF     shift, and go to state 26
    WHILE  shift, and go to state 27
    ID     shift, and go to state 28

    $default  reduce using rule 25 (Optional_statements)

    Compound_statement   go to state 29
    Optional_statements  go to state 30
    Statement_list       go to state 31
    Statement            go to state 32
    Variable             go to state 33
    Procedure_statement  go to state 34


state 20

   11 Subprogram_declarations: Subprogram_declarations Subprogram_declaration . ';'

    ';'  shift, and go to state 35


state 21

   14 Subprogram_declaration: Subprogram_head . @2 Declarations Compound_statement

    $default  reduce using rule 13 (@2)

    @2  go to state 36


state 22

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement . '.'

    '.'  shift, and go to state 37


state 23

    5 Declarations: Declarations VAR Identifier_list ':' . Type ';'

    ARRAY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    Type           go to state 41
    Standard_type  go to state 42


state 24

   16 Subprogram_head: FUNCTION ID . @3 Arguments ':' Standard_type ';'

    $default  reduce using rule 15 (@3)

    @3  go to state 43


state 25

   18 Subprogram_head: PROCEDURE ID . @4 Arguments ';'

    $default  reduce using rule 17 (@4)

    @4  go to state 44


state 26

   31 Statement: IF . Expression THEN Statement ELSE Statement

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 50
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 27

   32 Statement: WHILE . Expression DO Statement

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 54
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 28

   33 Variable: ID .
   34         | ID . '[' Expression_list ']'
   35 Procedure_statement: ID .
   36                    | ID . '(' Expression_list ')'

    '('  shift, and go to state 55
    '['  shift, and go to state 56

    ASSIGNOP  reduce using rule 33 (Variable)
    $default  reduce using rule 35 (Procedure_statement)


state 29

   30 Statement: Compound_statement .

    $default  reduce using rule 30 (Statement)


state 30

   23 Compound_statement: BEG Optional_statements . END

    END  shift, and go to state 57


state 31

   24 Optional_statements: Statement_list .
   27 Statement_list: Statement_list . ';' Statement

    ';'  shift, and go to state 58

    $default  reduce using rule 24 (Optional_statements)


state 32

   26 Statement_list: Statement .

    $default  reduce using rule 26 (Statement_list)


state 33

   28 Statement: Variable . ASSIGNOP Expression

    ASSIGNOP  shift, and go to state 59


state 34

   29 Statement: Procedure_statement .

    $default  reduce using rule 29 (Statement)


state 35

   11 Subprogram_declarations: Subprogram_declarations Subprogram_declaration ';' .

    $default  reduce using rule 11 (Subprogram_declarations)


state 36

   14 Subprogram_declaration: Subprogram_head @2 . Declarations Compound_statement

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 60


state 37

    2 Program: PROGRAM ID @1 '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.' .

    $default  reduce using rule 2 (Program)


state 38

    8 Type: ARRAY . '[' INUM ARRSEP INUM ']' OF Standard_type

    '['  shift, and go to state 61


state 39

    9 Standard_type: INTEGER .

    $default  reduce using rule 9 (Standard_type)


state 40

   10 Standard_type: REAL .

    $default  reduce using rule 10 (Standard_type)


state 41

    5 Declarations: Declarations VAR Identifier_list ':' Type . ';'

    ';'  shift, and go to state 62


state 42

    7 Type: Standard_type .

    $default  reduce using rule 7 (Type)


state 43

   16 Subprogram_head: FUNCTION ID @3 . Arguments ':' Standard_type ';'

    '('  shift, and go to state 63

    $default  reduce using rule 20 (Arguments)

    Arguments  go to state 64


state 44

   18 Subprogram_head: PROCEDURE ID @4 . Arguments ';'

    '('  shift, and go to state 63

    $default  reduce using rule 20 (Arguments)

    Arguments  go to state 65


state 45

   42 Simple_expression: ADDOP . Term

    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    Term    go to state 66
    Factor  go to state 53


state 46

   46 Factor: ID .
   47       | ID . '(' Expression_list ')'
   51       | ID . '[' Simple_expression ']'

    '('  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 46 (Factor)


state 47

   48 Factor: INUM .

    $default  reduce using rule 48 (Factor)


state 48

   49 Factor: RNUM .

    $default  reduce using rule 49 (Factor)


state 49

   50 Factor: '(' . Expression ')'

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 69
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 50

   31 Statement: IF Expression . THEN Statement ELSE Statement

    THEN  shift, and go to state 70


state 51

   39 Expression: Simple_expression .
   40           | Simple_expression . RELOP Simple_expression
   43 Simple_expression: Simple_expression . ADDOP Term

    RELOP  shift, and go to state 71
    ADDOP  shift, and go to state 72

    $default  reduce using rule 39 (Expression)


state 52

   41 Simple_expression: Term .
   45 Term: Term . MULOP Factor

    MULOP  shift, and go to state 73

    $default  reduce using rule 41 (Simple_expression)


state 53

   44 Term: Factor .

    $default  reduce using rule 44 (Term)


state 54

   32 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 74


state 55

   36 Procedure_statement: ID '(' . Expression_list ')'

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 75
    Expression         go to state 76
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 56

   34 Variable: ID '[' . Expression_list ']'

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 77
    Expression         go to state 76
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 57

   23 Compound_statement: BEG Optional_statements END .

    $default  reduce using rule 23 (Compound_statement)


state 58

   27 Statement_list: Statement_list ';' . Statement

    BEG    shift, and go to state 19
    IF     shift, and go to state 26
    WHILE  shift, and go to state 27
    ID     shift, and go to state 28

    Compound_statement   go to state 29
    Statement            go to state 78
    Variable             go to state 33
    Procedure_statement  go to state 34


state 59

   28 Statement: Variable ASSIGNOP . Expression

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 79
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 60

    5 Declarations: Declarations . VAR Identifier_list ':' Type ';'
   14 Subprogram_declaration: Subprogram_head @2 Declarations . Compound_statement

    BEG  shift, and go to state 19
    VAR  shift, and go to state 14

    Compound_statement  go to state 80


state 61

    8 Type: ARRAY '[' . INUM ARRSEP INUM ']' OF Standard_type

    INUM  shift, and go to state 81


state 62

    5 Declarations: Declarations VAR Identifier_list ':' Type ';' .

    $default  reduce using rule 5 (Declarations)


state 63

   19 Arguments: '(' . Parameter_list ')'

    ID  shift, and go to state 7

    Identifier_list  go to state 82
    Parameter_list   go to state 83


state 64

   16 Subprogram_head: FUNCTION ID @3 Arguments . ':' Standard_type ';'

    ':'  shift, and go to state 84


state 65

   18 Subprogram_head: PROCEDURE ID @4 Arguments . ';'

    ';'  shift, and go to state 85


state 66

   42 Simple_expression: ADDOP Term .
   45 Term: Term . MULOP Factor

    MULOP  shift, and go to state 73

    $default  reduce using rule 42 (Simple_expression)


state 67

   47 Factor: ID '(' . Expression_list ')'

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 86
    Expression         go to state 76
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 68

   51 Factor: ID '[' . Simple_expression ']'

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Simple_expression  go to state 87
    Term               go to state 52
    Factor             go to state 53


state 69

   50 Factor: '(' Expression . ')'

    ')'  shift, and go to state 88


state 70

   31 Statement: IF Expression THEN . Statement ELSE Statement

    BEG    shift, and go to state 19
    IF     shift, and go to state 26
    WHILE  shift, and go to state 27
    ID     shift, and go to state 28

    Compound_statement   go to state 29
    Statement            go to state 89
    Variable             go to state 33
    Procedure_statement  go to state 34


state 71

   40 Expression: Simple_expression RELOP . Simple_expression

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Simple_expression  go to state 90
    Term               go to state 52
    Factor             go to state 53


state 72

   43 Simple_expression: Simple_expression ADDOP . Term

    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    Term    go to state 91
    Factor  go to state 53


state 73

   45 Term: Term MULOP . Factor

    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    Factor  go to state 92


state 74

   32 Statement: WHILE Expression DO . Statement

    BEG    shift, and go to state 19
    IF     shift, and go to state 26
    WHILE  shift, and go to state 27
    ID     shift, and go to state 28

    Compound_statement   go to state 29
    Statement            go to state 93
    Variable             go to state 33
    Procedure_statement  go to state 34


state 75

   36 Procedure_statement: ID '(' Expression_list . ')'
   38 Expression_list: Expression_list . ',' Expression

    ')'  shift, and go to state 94
    ','  shift, and go to state 95


state 76

   37 Expression_list: Expression .

    $default  reduce using rule 37 (Expression_list)


state 77

   34 Variable: ID '[' Expression_list . ']'
   38 Expression_list: Expression_list . ',' Expression

    ','  shift, and go to state 95
    ']'  shift, and go to state 96


state 78

   27 Statement_list: Statement_list ';' Statement .

    $default  reduce using rule 27 (Statement_list)


state 79

   28 Statement: Variable ASSIGNOP Expression .

    $default  reduce using rule 28 (Statement)


state 80

   14 Subprogram_declaration: Subprogram_head @2 Declarations Compound_statement .

    $default  reduce using rule 14 (Subprogram_declaration)


state 81

    8 Type: ARRAY '[' INUM . ARRSEP INUM ']' OF Standard_type

    ARRSEP  shift, and go to state 97


state 82

    4 Identifier_list: Identifier_list . ',' ID
   21 Parameter_list: Identifier_list . ':' Type

    ','  shift, and go to state 10
    ':'  shift, and go to state 98


state 83

   19 Arguments: '(' Parameter_list . ')'
   22 Parameter_list: Parameter_list . ';' Identifier_list ':' Type

    ')'  shift, and go to state 99
    ';'  shift, and go to state 100


state 84

   16 Subprogram_head: FUNCTION ID @3 Arguments ':' . Standard_type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    Standard_type  go to state 101


state 85

   18 Subprogram_head: PROCEDURE ID @4 Arguments ';' .

    $default  reduce using rule 18 (Subprogram_head)


state 86

   38 Expression_list: Expression_list . ',' Expression
   47 Factor: ID '(' Expression_list . ')'

    ')'  shift, and go to state 102
    ','  shift, and go to state 95


state 87

   43 Simple_expression: Simple_expression . ADDOP Term
   51 Factor: ID '[' Simple_expression . ']'

    ADDOP  shift, and go to state 72
    ']'    shift, and go to state 103


state 88

   50 Factor: '(' Expression ')' .

    $default  reduce using rule 50 (Factor)


state 89

   31 Statement: IF Expression THEN Statement . ELSE Statement

    ELSE  shift, and go to state 104


state 90

   40 Expression: Simple_expression RELOP Simple_expression .
   43 Simple_expression: Simple_expression . ADDOP Term

    ADDOP  shift, and go to state 72

    $default  reduce using rule 40 (Expression)


state 91

   43 Simple_expression: Simple_expression ADDOP Term .
   45 Term: Term . MULOP Factor

    MULOP  shift, and go to state 73

    $default  reduce using rule 43 (Simple_expression)


state 92

   45 Term: Term MULOP Factor .

    $default  reduce using rule 45 (Term)


state 93

   32 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 32 (Statement)


state 94

   36 Procedure_statement: ID '(' Expression_list ')' .

    $default  reduce using rule 36 (Procedure_statement)


state 95

   38 Expression_list: Expression_list ',' . Expression

    ADDOP  shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 105
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 96

   34 Variable: ID '[' Expression_list ']' .

    $default  reduce using rule 34 (Variable)


state 97

    8 Type: ARRAY '[' INUM ARRSEP . INUM ']' OF Standard_type

    INUM  shift, and go to state 106


state 98

   21 Parameter_list: Identifier_list ':' . Type

    ARRAY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    Type           go to state 107
    Standard_type  go to state 42


state 99

   19 Arguments: '(' Parameter_list ')' .

    $default  reduce using rule 19 (Arguments)


state 100

   22 Parameter_list: Parameter_list ';' . Identifier_list ':' Type

    ID  shift, and go to state 7

    Identifier_list  go to state 108


state 101

   16 Subprogram_head: FUNCTION ID @3 Arguments ':' Standard_type . ';'

    ';'  shift, and go to state 109


state 102

   47 Factor: ID '(' Expression_list ')' .

    $default  reduce using rule 47 (Factor)


state 103

   51 Factor: ID '[' Simple_expression ']' .

    $default  reduce using rule 51 (Factor)


state 104

   31 Statement: IF Expression THEN Statement ELSE . Statement

    BEG    shift, and go to state 19
    IF     shift, and go to state 26
    WHILE  shift, and go to state 27
    ID     shift, and go to state 28

    Compound_statement   go to state 29
    Statement            go to state 110
    Variable             go to state 33
    Procedure_statement  go to state 34


state 105

   38 Expression_list: Expression_list ',' Expression .

    $default  reduce using rule 38 (Expression_list)


state 106

    8 Type: ARRAY '[' INUM ARRSEP INUM . ']' OF Standard_type

    ']'  shift, and go to state 111


state 107

   21 Parameter_list: Identifier_list ':' Type .

    $default  reduce using rule 21 (Parameter_list)


state 108

    4 Identifier_list: Identifier_list . ',' ID
   22 Parameter_list: Parameter_list ';' Identifier_list . ':' Type

    ','  shift, and go to state 10
    ':'  shift, and go to state 112


state 109

   16 Subprogram_head: FUNCTION ID @3 Arguments ':' Standard_type ';' .

    $default  reduce using rule 16 (Subprogram_head)


state 110

   31 Statement: IF Expression THEN Statement ELSE Statement .

    $default  reduce using rule 31 (Statement)


state 111

    8 Type: ARRAY '[' INUM ARRSEP INUM ']' . OF Standard_type

    OF  shift, and go to state 113


state 112

   22 Parameter_list: Parameter_list ';' Identifier_list ':' . Type

    ARRAY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    Type           go to state 114
    Standard_type  go to state 42


state 113

    8 Type: ARRAY '[' INUM ARRSEP INUM ']' OF . Standard_type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    Standard_type  go to state 115


state 114

   22 Parameter_list: Parameter_list ';' Identifier_list ':' Type .

    $default  reduce using rule 22 (Parameter_list)


state 115

    8 Type: ARRAY '[' INUM ARRSEP INUM ']' OF Standard_type .

    $default  reduce using rule 8 (Type)
