Terminals which are not used

   ARRSEP


Grammar

    0 $accept: Program $end

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    2 Identifier_list: ID
    3                | Identifier_list ',' ID

    4 Declarations: Declarations VAR Identifier_list ':' Type ';'
    5             | /* empty */

    6 Type: Standard_type
    7     | ARRAY '[' INUM '.' '.' INUM ']' OF Standard_type

    8 Standard_type: INTEGER
    9              | REAL

   10 Subprogram_declarations: Subprogram_declarations Subprogram_declaration ';'
   11                        | /* empty */

   12 @1: /* empty */

   13 Subprogram_declaration: Subprogram_head @1 Declarations Compound_statement

   14 Subprogram_head: FUNCTION ID Arguments ':' Standard_type ';'
   15                | PROCEDURE ID Arguments ';'

   16 Arguments: '(' Parameter_list ')'
   17          | /* empty */

   18 Parameter_list: Identifier_list ':' Type
   19               | Parameter_list ';' Identifier_list ':' Type

   20 Compound_statement: BEG Optional_statements END

   21 Optional_statements: Statement_list
   22                    | /* empty */

   23 Statement_list: Statement
   24               | Statement_list ';' Statement

   25 Statement: Variable ASSIGNOP Expression
   26          | Procedure_statement
   27          | Compound_statement
   28          | IF Expression THEN Statement ELSE Statement
   29          | WHILE Expression DO Statement

   30 Variable: ID
   31         | ID '[' Expression_list ']'

   32 Procedure_statement: ID
   33                    | ID '(' Expression_list ')'

   34 Expression_list: Expression
   35                | Expression_list ',' Expression

   36 Expression: Simple_expression
   37           | Simple_expression RELOP Simple_expression

   38 Simple_expression: Term
   39                  | ADDOP Term
   40                  | Simple_expression ADDOP Term

   41 Term: Factor
   42     | Term MULOP Factor

   43 Factor: ID
   44       | ID '(' Expression_list ')'
   45       | INUM
   46       | RNUM
   47       | '(' Expression ')'
   48       | ID '[' Simple_expression ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 16 33 44 47
')' (41) 1 16 33 44 47
',' (44) 3 35
'.' (46) 1 7
':' (58) 4 14 18 19
';' (59) 1 4 10 14 15 19 24
'[' (91) 7 31 48
']' (93) 7 31 48
error (256)
PROGRAM (258) 1
FUNCTION (259) 14
PROCEDURE (260) 15
BEG (261) 20
END (262) 20
IF (263) 28
THEN (264) 28
ELSE (265) 28
WHILE (266) 29
DO (267) 29
VAR (268) 4
ARRAY (269) 7
OF (270) 7
ARRSEP (271)
INTEGER (272) 8
REAL (273) 9
ASSIGNOP (274) 25
RELOP (275) 37
ADDOP (276) 39 40
MULOP (277) 42
INUM (278) 7 45
RNUM (279) 46
ID (280) 1 2 3 14 15 30 31 32 33 43 44 48


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 1, on right: 0
Identifier_list (36)
    on left: 2 3, on right: 1 3 4 18 19
Declarations (37)
    on left: 4 5, on right: 1 4 13
Type (38)
    on left: 6 7, on right: 4 18 19
Standard_type (39)
    on left: 8 9, on right: 6 7 14
Subprogram_declarations (40)
    on left: 10 11, on right: 1 10
Subprogram_declaration (41)
    on left: 13, on right: 10
@1 (42)
    on left: 12, on right: 13
Subprogram_head (43)
    on left: 14 15, on right: 13
Arguments (44)
    on left: 16 17, on right: 14 15
Parameter_list (45)
    on left: 18 19, on right: 16 19
Compound_statement (46)
    on left: 20, on right: 1 13 27
Optional_statements (47)
    on left: 21 22, on right: 20
Statement_list (48)
    on left: 23 24, on right: 21 24
Statement (49)
    on left: 25 26 27 28 29, on right: 23 24 28 29
Variable (50)
    on left: 30 31, on right: 25
Procedure_statement (51)
    on left: 32 33, on right: 26
Expression_list (52)
    on left: 34 35, on right: 31 33 35 44
Expression (53)
    on left: 36 37, on right: 25 28 29 34 35 47
Simple_expression (54)
    on left: 38 39 40, on right: 36 37 40 48
Term (55)
    on left: 41 42, on right: 38 39 40 42
Factor (56)
    on left: 43 44 45 46 47 48, on right: 41 42


state 0

    0 $accept: . Program $end

    PROGRAM  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PROGRAM . ID '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PROGRAM ID . '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    '('  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PROGRAM ID '(' . Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.'

    ID  shift, and go to state 6

    Identifier_list  go to state 7


state 6

    2 Identifier_list: ID .

    $default  reduce using rule 2 (Identifier_list)


state 7

    1 Program: PROGRAM ID '(' Identifier_list . ')' ';' Declarations Subprogram_declarations Compound_statement '.'
    3 Identifier_list: Identifier_list . ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


state 8

    1 Program: PROGRAM ID '(' Identifier_list ')' . ';' Declarations Subprogram_declarations Compound_statement '.'

    ';'  shift, and go to state 10


state 9

    3 Identifier_list: Identifier_list ',' . ID

    ID  shift, and go to state 11


state 10

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' . Declarations Subprogram_declarations Compound_statement '.'

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 12


state 11

    3 Identifier_list: Identifier_list ',' ID .

    $default  reduce using rule 3 (Identifier_list)


state 12

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' Declarations . Subprogram_declarations Compound_statement '.'
    4 Declarations: Declarations . VAR Identifier_list ':' Type ';'

    VAR  shift, and go to state 13

    $default  reduce using rule 11 (Subprogram_declarations)

    Subprogram_declarations  go to state 14


state 13

    4 Declarations: Declarations VAR . Identifier_list ':' Type ';'

    ID  shift, and go to state 6

    Identifier_list  go to state 15


state 14

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' Declarations Subprogram_declarations . Compound_statement '.'
   10 Subprogram_declarations: Subprogram_declarations . Subprogram_declaration ';'

    FUNCTION   shift, and go to state 16
    PROCEDURE  shift, and go to state 17
    BEG        shift, and go to state 18

    Subprogram_declaration  go to state 19
    Subprogram_head         go to state 20
    Compound_statement      go to state 21


state 15

    3 Identifier_list: Identifier_list . ',' ID
    4 Declarations: Declarations VAR Identifier_list . ':' Type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 22


state 16

   14 Subprogram_head: FUNCTION . ID Arguments ':' Standard_type ';'

    ID  shift, and go to state 23


state 17

   15 Subprogram_head: PROCEDURE . ID Arguments ';'

    ID  shift, and go to state 24


state 18

   20 Compound_statement: BEG . Optional_statements END

    BEG    shift, and go to state 18
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    ID     shift, and go to state 27

    $default  reduce using rule 22 (Optional_statements)

    Compound_statement   go to state 28
    Optional_statements  go to state 29
    Statement_list       go to state 30
    Statement            go to state 31
    Variable             go to state 32
    Procedure_statement  go to state 33


state 19

   10 Subprogram_declarations: Subprogram_declarations Subprogram_declaration . ';'

    ';'  shift, and go to state 34


state 20

   13 Subprogram_declaration: Subprogram_head . @1 Declarations Compound_statement

    $default  reduce using rule 12 (@1)

    @1  go to state 35


state 21

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement . '.'

    '.'  shift, and go to state 36


state 22

    4 Declarations: Declarations VAR Identifier_list ':' . Type ';'

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    Type           go to state 40
    Standard_type  go to state 41


state 23

   14 Subprogram_head: FUNCTION ID . Arguments ':' Standard_type ';'

    '('  shift, and go to state 42

    $default  reduce using rule 17 (Arguments)

    Arguments  go to state 43


state 24

   15 Subprogram_head: PROCEDURE ID . Arguments ';'

    '('  shift, and go to state 42

    $default  reduce using rule 17 (Arguments)

    Arguments  go to state 44


state 25

   28 Statement: IF . Expression THEN Statement ELSE Statement

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 50
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 26

   29 Statement: WHILE . Expression DO Statement

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 54
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 27

   30 Variable: ID .
   31         | ID . '[' Expression_list ']'
   32 Procedure_statement: ID .
   33                    | ID . '(' Expression_list ')'

    '('  shift, and go to state 55
    '['  shift, and go to state 56

    ASSIGNOP  reduce using rule 30 (Variable)
    $default  reduce using rule 32 (Procedure_statement)


state 28

   27 Statement: Compound_statement .

    $default  reduce using rule 27 (Statement)


state 29

   20 Compound_statement: BEG Optional_statements . END

    END  shift, and go to state 57


state 30

   21 Optional_statements: Statement_list .
   24 Statement_list: Statement_list . ';' Statement

    ';'  shift, and go to state 58

    $default  reduce using rule 21 (Optional_statements)


state 31

   23 Statement_list: Statement .

    $default  reduce using rule 23 (Statement_list)


state 32

   25 Statement: Variable . ASSIGNOP Expression

    ASSIGNOP  shift, and go to state 59


state 33

   26 Statement: Procedure_statement .

    $default  reduce using rule 26 (Statement)


state 34

   10 Subprogram_declarations: Subprogram_declarations Subprogram_declaration ';' .

    $default  reduce using rule 10 (Subprogram_declarations)


state 35

   13 Subprogram_declaration: Subprogram_head @1 . Declarations Compound_statement

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 60


state 36

    1 Program: PROGRAM ID '(' Identifier_list ')' ';' Declarations Subprogram_declarations Compound_statement '.' .

    $default  reduce using rule 1 (Program)


state 37

    7 Type: ARRAY . '[' INUM '.' '.' INUM ']' OF Standard_type

    '['  shift, and go to state 61


state 38

    8 Standard_type: INTEGER .

    $default  reduce using rule 8 (Standard_type)


state 39

    9 Standard_type: REAL .

    $default  reduce using rule 9 (Standard_type)


state 40

    4 Declarations: Declarations VAR Identifier_list ':' Type . ';'

    ';'  shift, and go to state 62


state 41

    6 Type: Standard_type .

    $default  reduce using rule 6 (Type)


state 42

   16 Arguments: '(' . Parameter_list ')'

    ID  shift, and go to state 6

    Identifier_list  go to state 63
    Parameter_list   go to state 64


state 43

   14 Subprogram_head: FUNCTION ID Arguments . ':' Standard_type ';'

    ':'  shift, and go to state 65


state 44

   15 Subprogram_head: PROCEDURE ID Arguments . ';'

    ';'  shift, and go to state 66


state 45

   39 Simple_expression: ADDOP . Term

    INUM  shift, and go to state 46
    RNUM  shift, and go to state 47
    ID    shift, and go to state 48
    '('   shift, and go to state 49

    Term    go to state 67
    Factor  go to state 53


state 46

   45 Factor: INUM .

    $default  reduce using rule 45 (Factor)


state 47

   46 Factor: RNUM .

    $default  reduce using rule 46 (Factor)


state 48

   43 Factor: ID .
   44       | ID . '(' Expression_list ')'
   48       | ID . '[' Simple_expression ']'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 43 (Factor)


state 49

   47 Factor: '(' . Expression ')'

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 70
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 50

   28 Statement: IF Expression . THEN Statement ELSE Statement

    THEN  shift, and go to state 71


state 51

   36 Expression: Simple_expression .
   37           | Simple_expression . RELOP Simple_expression
   40 Simple_expression: Simple_expression . ADDOP Term

    RELOP  shift, and go to state 72
    ADDOP  shift, and go to state 73

    $default  reduce using rule 36 (Expression)


state 52

   38 Simple_expression: Term .
   42 Term: Term . MULOP Factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 38 (Simple_expression)


state 53

   41 Term: Factor .

    $default  reduce using rule 41 (Term)


state 54

   29 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 75


state 55

   33 Procedure_statement: ID '(' . Expression_list ')'

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 76
    Expression         go to state 77
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 56

   31 Variable: ID '[' . Expression_list ']'

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 78
    Expression         go to state 77
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 57

   20 Compound_statement: BEG Optional_statements END .

    $default  reduce using rule 20 (Compound_statement)


state 58

   24 Statement_list: Statement_list ';' . Statement

    BEG    shift, and go to state 18
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    ID     shift, and go to state 27

    Compound_statement   go to state 28
    Statement            go to state 79
    Variable             go to state 32
    Procedure_statement  go to state 33


state 59

   25 Statement: Variable ASSIGNOP . Expression

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 80
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 60

    4 Declarations: Declarations . VAR Identifier_list ':' Type ';'
   13 Subprogram_declaration: Subprogram_head @1 Declarations . Compound_statement

    BEG  shift, and go to state 18
    VAR  shift, and go to state 13

    Compound_statement  go to state 81


state 61

    7 Type: ARRAY '[' . INUM '.' '.' INUM ']' OF Standard_type

    INUM  shift, and go to state 82


state 62

    4 Declarations: Declarations VAR Identifier_list ':' Type ';' .

    $default  reduce using rule 4 (Declarations)


state 63

    3 Identifier_list: Identifier_list . ',' ID
   18 Parameter_list: Identifier_list . ':' Type

    ','  shift, and go to state 9
    ':'  shift, and go to state 83


state 64

   16 Arguments: '(' Parameter_list . ')'
   19 Parameter_list: Parameter_list . ';' Identifier_list ':' Type

    ')'  shift, and go to state 84
    ';'  shift, and go to state 85


state 65

   14 Subprogram_head: FUNCTION ID Arguments ':' . Standard_type ';'

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    Standard_type  go to state 86


state 66

   15 Subprogram_head: PROCEDURE ID Arguments ';' .

    $default  reduce using rule 15 (Subprogram_head)


state 67

   39 Simple_expression: ADDOP Term .
   42 Term: Term . MULOP Factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 39 (Simple_expression)


state 68

   44 Factor: ID '(' . Expression_list ')'

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression_list    go to state 87
    Expression         go to state 77
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 69

   48 Factor: ID '[' . Simple_expression ']'

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Simple_expression  go to state 88
    Term               go to state 52
    Factor             go to state 53


state 70

   47 Factor: '(' Expression . ')'

    ')'  shift, and go to state 89


state 71

   28 Statement: IF Expression THEN . Statement ELSE Statement

    BEG    shift, and go to state 18
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    ID     shift, and go to state 27

    Compound_statement   go to state 28
    Statement            go to state 90
    Variable             go to state 32
    Procedure_statement  go to state 33


state 72

   37 Expression: Simple_expression RELOP . Simple_expression

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Simple_expression  go to state 91
    Term               go to state 52
    Factor             go to state 53


state 73

   40 Simple_expression: Simple_expression ADDOP . Term

    INUM  shift, and go to state 46
    RNUM  shift, and go to state 47
    ID    shift, and go to state 48
    '('   shift, and go to state 49

    Term    go to state 92
    Factor  go to state 53


state 74

   42 Term: Term MULOP . Factor

    INUM  shift, and go to state 46
    RNUM  shift, and go to state 47
    ID    shift, and go to state 48
    '('   shift, and go to state 49

    Factor  go to state 93


state 75

   29 Statement: WHILE Expression DO . Statement

    BEG    shift, and go to state 18
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    ID     shift, and go to state 27

    Compound_statement   go to state 28
    Statement            go to state 94
    Variable             go to state 32
    Procedure_statement  go to state 33


state 76

   33 Procedure_statement: ID '(' Expression_list . ')'
   35 Expression_list: Expression_list . ',' Expression

    ')'  shift, and go to state 95
    ','  shift, and go to state 96


state 77

   34 Expression_list: Expression .

    $default  reduce using rule 34 (Expression_list)


state 78

   31 Variable: ID '[' Expression_list . ']'
   35 Expression_list: Expression_list . ',' Expression

    ','  shift, and go to state 96
    ']'  shift, and go to state 97


state 79

   24 Statement_list: Statement_list ';' Statement .

    $default  reduce using rule 24 (Statement_list)


state 80

   25 Statement: Variable ASSIGNOP Expression .

    $default  reduce using rule 25 (Statement)


state 81

   13 Subprogram_declaration: Subprogram_head @1 Declarations Compound_statement .

    $default  reduce using rule 13 (Subprogram_declaration)


state 82

    7 Type: ARRAY '[' INUM . '.' '.' INUM ']' OF Standard_type

    '.'  shift, and go to state 98


state 83

   18 Parameter_list: Identifier_list ':' . Type

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    Type           go to state 99
    Standard_type  go to state 41


state 84

   16 Arguments: '(' Parameter_list ')' .

    $default  reduce using rule 16 (Arguments)


state 85

   19 Parameter_list: Parameter_list ';' . Identifier_list ':' Type

    ID  shift, and go to state 6

    Identifier_list  go to state 100


state 86

   14 Subprogram_head: FUNCTION ID Arguments ':' Standard_type . ';'

    ';'  shift, and go to state 101


state 87

   35 Expression_list: Expression_list . ',' Expression
   44 Factor: ID '(' Expression_list . ')'

    ')'  shift, and go to state 102
    ','  shift, and go to state 96


state 88

   40 Simple_expression: Simple_expression . ADDOP Term
   48 Factor: ID '[' Simple_expression . ']'

    ADDOP  shift, and go to state 73
    ']'    shift, and go to state 103


state 89

   47 Factor: '(' Expression ')' .

    $default  reduce using rule 47 (Factor)


state 90

   28 Statement: IF Expression THEN Statement . ELSE Statement

    ELSE  shift, and go to state 104


state 91

   37 Expression: Simple_expression RELOP Simple_expression .
   40 Simple_expression: Simple_expression . ADDOP Term

    ADDOP  shift, and go to state 73

    $default  reduce using rule 37 (Expression)


state 92

   40 Simple_expression: Simple_expression ADDOP Term .
   42 Term: Term . MULOP Factor

    MULOP  shift, and go to state 74

    $default  reduce using rule 40 (Simple_expression)


state 93

   42 Term: Term MULOP Factor .

    $default  reduce using rule 42 (Term)


state 94

   29 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 29 (Statement)


state 95

   33 Procedure_statement: ID '(' Expression_list ')' .

    $default  reduce using rule 33 (Procedure_statement)


state 96

   35 Expression_list: Expression_list ',' . Expression

    ADDOP  shift, and go to state 45
    INUM   shift, and go to state 46
    RNUM   shift, and go to state 47
    ID     shift, and go to state 48
    '('    shift, and go to state 49

    Expression         go to state 105
    Simple_expression  go to state 51
    Term               go to state 52
    Factor             go to state 53


state 97

   31 Variable: ID '[' Expression_list ']' .

    $default  reduce using rule 31 (Variable)


state 98

    7 Type: ARRAY '[' INUM '.' . '.' INUM ']' OF Standard_type

    '.'  shift, and go to state 106


state 99

   18 Parameter_list: Identifier_list ':' Type .

    $default  reduce using rule 18 (Parameter_list)


state 100

    3 Identifier_list: Identifier_list . ',' ID
   19 Parameter_list: Parameter_list ';' Identifier_list . ':' Type

    ','  shift, and go to state 9
    ':'  shift, and go to state 107


state 101

   14 Subprogram_head: FUNCTION ID Arguments ':' Standard_type ';' .

    $default  reduce using rule 14 (Subprogram_head)


state 102

   44 Factor: ID '(' Expression_list ')' .

    $default  reduce using rule 44 (Factor)


state 103

   48 Factor: ID '[' Simple_expression ']' .

    $default  reduce using rule 48 (Factor)


state 104

   28 Statement: IF Expression THEN Statement ELSE . Statement

    BEG    shift, and go to state 18
    IF     shift, and go to state 25
    WHILE  shift, and go to state 26
    ID     shift, and go to state 27

    Compound_statement   go to state 28
    Statement            go to state 108
    Variable             go to state 32
    Procedure_statement  go to state 33


state 105

   35 Expression_list: Expression_list ',' Expression .

    $default  reduce using rule 35 (Expression_list)


state 106

    7 Type: ARRAY '[' INUM '.' '.' . INUM ']' OF Standard_type

    INUM  shift, and go to state 109


state 107

   19 Parameter_list: Parameter_list ';' Identifier_list ':' . Type

    ARRAY    shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    Type           go to state 110
    Standard_type  go to state 41


state 108

   28 Statement: IF Expression THEN Statement ELSE Statement .

    $default  reduce using rule 28 (Statement)


state 109

    7 Type: ARRAY '[' INUM '.' '.' INUM . ']' OF Standard_type

    ']'  shift, and go to state 111


state 110

   19 Parameter_list: Parameter_list ';' Identifier_list ':' Type .

    $default  reduce using rule 19 (Parameter_list)


state 111

    7 Type: ARRAY '[' INUM '.' '.' INUM ']' . OF Standard_type

    OF  shift, and go to state 112


state 112

    7 Type: ARRAY '[' INUM '.' '.' INUM ']' OF . Standard_type

    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    Standard_type  go to state 113


state 113

    7 Type: ARRAY '[' INUM '.' '.' INUM ']' OF Standard_type .

    $default  reduce using rule 7 (Type)
